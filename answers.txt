eduardos-MBP:AlgoSort eduardolowensohn$ ruby benchmark.rb
              user     system      total        real
Heap Sort:   0.000266   0.000086   0.000352 (  0.000568)
Quick Sort:   0.000221   0.000028   0.000249 (  0.000250)
Bucket Sort:   0.000106   0.000019   0.000125 (  0.000126)


Prining the random numbers:

eduardos-MBP:AlgoSort eduardolowensohn$ ruby benchmark.rb
              user     system      total        real
Heap Sort: ["1", "11", "13", "14", "16", "17", "21", "22", "26", "28", "29", "3", "31", "33", "34", "35", "38", "40", "43", "46", "47", "49", "5", "52", "53", "54", "56", "58", "60", "61", "63", "66", "69", "70", "71", "74", "75", "78", "8", "80", "82", "84", "86", "89", "9", "90", "93", "95", "98", "99"]
  0.000284   0.000198   0.000482 (  0.001243)
Quick Sort: ["1", "11", "13", "14", "16", "17", "21", "22", "26", "28", "29", "3", "31", "33", "34", "35", "38", "40", "43", "46", "47", "49", "5", "52", "53", "54", "56", "58", "60", "61", "63", "66", "69", "70", "71", "74", "75", "78", "8", "80", "82", "84", "86", "89", "9", "90", "93", "95", "98", "99"]
  0.000358   0.000041   0.000399 (  0.000407)
Bucket Sort: [1, 3, 5, 8, 9, 11, 13, 16, 17, 21, 22, 26, 28, 29, 31, 33, 34, 35, 38, 40, 43, 46, 47, 49, 52, 53, 54, 56, 58, 60, 61, 63, 66, 69, 70, 71, 74, 75, 78, 80, 82, 84, 86, 89, 90, 93, 95, 98, 99, 14]
  0.000143   0.000037   0.000180 (  0.000182)
eduardos-MBP:AlgoSort eduardolowensohn$ 

Bucket sort was faster than Quick and Heap Sort.
Searching in different sites Bucket sort generally is faster with small quantity of elements,
than Quick and Heap Sort
Exremes numbers of elements like less than 1 or mor than 500 Bucket sort became slower thatn
Quick and Heap Sort.
In this case 50 was the number where Bucket Sort is faster.
Heap sort maintain  the speed of search  from less than 1 to more than 500 
and is faster relative to Bucket sort on the extreme case of elements.
Quick Sort is faster than the others two algoritms in average but between 0,5 and 500 is not competitive
against Bucket sort.

I think the reason on small numbers Bucket sort is faster becasue the way elements are 
assigned to the buckets. Generally the index is used as the value. In this case if the data is
distributed on the buckets perfectly the time is shorter however use more memory. 



